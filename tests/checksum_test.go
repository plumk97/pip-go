package tests_test

import (
	"encoding/hex"
	"syscall"
	"testing"

	pipgo "github.com/plumk97/pip-go"
	"github.com/plumk97/pip-go/types"
)

func TestInetChecksum(t *testing.T) {
	if bytes, err := hex.DecodeString("45000132000000004011b912c0a80001ffffffff00430044011e6cda02010600dd2dd93c00000000c0a80064c0a80064000000000000000044291eea599700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000638253633501053604c0a80001330400001c200608c0a80101c0a800010104ffffff000304c0a80001ff"); err == nil {
		// t.Log(pipgo.Checksum(bytes))
		ipHdr := types.IPHdr(bytes[:20])
		t.Logf("%+v", ipHdr)

		udpHdr := types.UDPHdr(bytes[20:28])
		t.Log(hex.EncodeToString(udpHdr))

		udpHdr.SetSum(0)
		t.Log(hex.EncodeToString(udpHdr))

		sum := pipgo.InetChecksum(append(udpHdr, bytes[28:]...), syscall.IPPROTO_UDP, ipHdr.Src(), ipHdr.Dst())
		udpHdr.SetSum(sum)
		t.Log(hex.EncodeToString(udpHdr))

	} else {
		t.Error(err)
	}
}

func TestInetChecksumBuf(t *testing.T) {
	if bytes, err := hex.DecodeString("45000132000000004011b912c0a80001ffffffff00430044011e6cda02010600dd2dd93c00000000c0a80064c0a80064000000000000000044291eea599700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000638253633501053604c0a80001330400001c200608c0a80101c0a800010104ffffff000304c0a80001ff"); err == nil {
		ipHdr := types.IPHdr(bytes[:20])

		payloadBuf := pipgo.NewBuffer(bytes[28:])
		udpHdrBuf := pipgo.NewBuffer(bytes[20:28])
		udpHdrBuf.SetNext(payloadBuf)

		udpHdr := types.UDPHdr(udpHdrBuf.Payload())
		t.Log(hex.EncodeToString(udpHdr))

		udpHdr.SetSum(0)
		t.Log(hex.EncodeToString(udpHdr))

		udpHdr.SetSum(pipgo.InetChecksumBuf(udpHdrBuf, syscall.IPPROTO_UDP, ipHdr.Src(), ipHdr.Dst()))
		t.Log(hex.EncodeToString(udpHdr))

	} else {
		t.Error(err)
	}
}
